常见的数据结构：
  数组(类似python中的list)， 链表；
  队列， 栈；
  哈希表(类似python中的字典)；
  树， 二叉树， 完全二叉树， 红黑树， B+树；
  图；
算法：
  递归；--> 循环/DP(Dynamical Programming)
  HASH算法， 非对称RSA算法；
  广度优先遍历，深度优先遍历；
  快速排序， 归并排序；


1.如何解决递归中重复运算带来的空间和时间上的浪费？
  怎么将已经算出的方法保存下来，并且方便查询出计算结果？
  这里可以使用DP（动态规划）。

2.去重处理
    设置两个队列，一个是待爬取队列，既要进也要出，一旦这个待爬取队列中没有元素
    可以出了，说明当前这个爬虫任务完成了；一个是已经爬取的队列，这个队列的元素
    是只进不出的，只是一个历史记录。
    有两个部分的去重，第一次发生在已经爬取的队列中，第二次发生在待爬取的队列中。
    去重的一层保险：
        关系型数据库中，由于url长度不定，通过把url(做hash 如md5/sha256等)设置成主键key来最终去重。
