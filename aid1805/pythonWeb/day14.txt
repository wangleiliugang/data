day14
1.python工具---pip
  1.作用
    python的软件包管理器，有些python包被集成到了pip中。
    只要被集成到pip中的包，都允许通过pip直接安装。
  2.安装pip
    sudo apt install python-pip (python2)
    sudo apt install python3-pip (python3)
  3.使用pip/pip3
    1.安装/更新/删除 python包
      1.安装python包
        sudo pip3 install SomePackage
	        如:sudo pip3 install pymysql==0.7.11
      2.下载python包
        sudo pip3 dowload SomePackage
      3.删除python包
        sudo pip3 uninstall SomePackage
      4.更新(升级)python包
        sudo pip3 upgrade SomePackage
    2.查看当前环境中所安装的包
      pip3 list
    3.搜索
      pip3 search SomePackage
    4.展示
      pip3 show SomePackage
  **5.记录现有环境的python包**
      1.pip3 freeze > requirements.txt
        将当前python环境中所安装的内容打包成一个列表
      2.pip3 install -r requirements.txt
        允许在当前系统下逐一安装requirements.txt中所列出的内容
2.python工具---VirtualEnv
  1.什么是VirtualEnv - 虚拟环境
    VirtualEnv 是python中的虚拟环境，在做python应用开发时，如果不想在大的python环境中安装各种各样的包的话，则可以虚拟出一个python环境，可以让虚拟环境专门为某一个应用而存在。
    允许在虚拟环境中安装各种包且不影响大的python环境。
  2.安装VirtualEnv
    sudo pip3 install virtualenv
  3.创建和使用虚拟环境
    1.准备工作
      mkdir my_env
      cd my_env
    2.创建虚拟环境
      virtualenv 虚拟环境名称
        ex:virtualenv default
      创建指定版本的虚拟环境：
      virtualenv -p /usr/bin/python2.7 名称
      virtualenv -p /usr/bin/python3.5 名称
        ex:virtualenv -p /usr/bin/python3.5 env3.5
    3.启动虚拟环境
      注意：不能在bin目录中启动。
      先进入对应的虚拟环境目录中 --> source bin/activate
    4.退出虚拟环境
      deactivate
    5.删除虚拟环境
      rm 虚拟环境目录 -rf
    **注意:**
      在虚拟环境中使用pip安装和卸载内容时，不要使用sudo进行授权。
**4.虚拟环境管理工具 - VirtualenvWrapper**
    1.作用
      第三方的管理工具，能够快速高效而且方便的管理虚拟环境。
    2.安装虚拟环境管理工具
      sudo pip3 install virtualenvwrapper
    3.配置virtualenvwrapper
      在~家目录下，有一个终端管理文件 .bashrc (在~家目录下，输入ll可以查看)，
      配置 .bashrc文件，以便在启动终端时就自动启动虚拟环境管理工具。
      1.修改 .bashrc文件:
        终端输入命令：sudo vi .bashrc(E:进入  A:编辑  esc:退出编辑  :wq,保存并退出)
	    2.在 .bashrc最底部增加以下内容：
	      1.export WORKON_HOME=~/my_env
	        将~/my_env作为虚拟环境的管理目录，所有使用virtualenvwrapper创建的虚拟环境都默认保存于此。
	      2.如果系统中包含多个python执行环境的话，则添加以下内容：
	        export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
	      3.source /usr/local/bin/virtualenvwrapper.sh
        4.在~目录下执行一遍.bashrc文件
          终端输入命令：source .bashrc
    4.使用虚拟环境管理工具
      1.创建并进入虚拟环境
        1.mkvirtualenv 虚拟环境名称
	         ex:mkvirtualenv default
	      2.mkvirtualenv --python=/usr/bin/python2.7 虚拟环境名称
      2.查看当前所维护的所有虚拟环境
        workon
      3.切换虚拟环境
        workon 虚拟环境名称
      4.退出虚拟环境
        deactive
      5.删除虚拟环境
        rmvirtualenv 虚拟环境名称
