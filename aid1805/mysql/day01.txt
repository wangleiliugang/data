MySQL 概述
　　什么是数据库？
　　　　　数据库是一个存储数据的仓库
　　哪些公司在用数据库？
　　　　　金融机构，购物网站，游戏网站，论坛网站...
  提供数据库服务的软件
     软件分类：MySQL, SQL_Seerver, Oracle, DB2, Mariadb, MongoDB ...
     在生产环境中，如何选择哪个数据库软件：
     　　　1.是否开源？
           开源软件：MySQL, Mariadb, MongoDB
           商业软件：Oracle, DB2, SQL_Server
        2.是否跨平台？
        　　　不跨平台：SQL_Server
           不跨平台：MySQL, Mariadb, MongoDB, Oracle, DB2
        3.公司类型
        　　　商业软件：政府部门，　金融机构
        　　　开源软件：游戏网站，　购物网站，　论坛网站...
  MySQL特点
  　　　1.关系型数据库
  　　　　　　关系型数据库特点：
  　　　　　　　　数据是以行和列的形式存储的
　　　　　　　　　　这一系列的行和列称为表
　　　　　　　　　　表中的每一行叫一条记录
　　　　　　　　　　表中的每一列叫一个字段
　　　　　　　　　　表和表之间的逻辑关联叫关系
　　　　　　　　　　关系型数据库的核心内容是　关系　即　二维表
　　　　　　　　示例：
　　　　　　　　　　关系型数据库存储
　　　　　　　　　　　表1　　　学生信息表
　　　　　　　　　　　姓名　　　　年龄　　　　　　　　班级
　　　　　　　　　　 小张　　　 　23　　　　　　　AID1712
　　　　　　　　　　 小王　　　 　20　　　　　　　AID1710
　　　　　　　　　　　表2　　　班级信息表
　　　　　　　　　　　班级　　　　　　　　班主任
　　　　　　　　　　AID1712　　　　　　王大大
　　　　　　　　　　AID1710　　　　　　张大大
　　　　　　　　　　非关系型数据库存储
　　　　　　　　　　　{姓名："小张", 年龄: 25, 班级："AID1712", 班主任："王大大"}
　　　　　　2.跨平台
　　　　　　　　　可以在Unix, Linux, Windows 上运行MySQL服务
　　　　　　3.支持多种编程语言
　　　　　　　　　Python, Java, Php ...

MySQL 安装
　　Ubuntu安装MySQL服务
　　　　　　安装服务端：sudo apt-get install mysql-server
　　　　　　安装客户端：sudo apt-get install mysql-client
  启动和连接MySQL服务
   　　　服务端启动：
        查看Mysql服务的状态：sudo /etc/init.d/mysql status
        启动Mysql服务：sudo /etc/init.d/mysql start
        停止Mysql服务：sudo /etc/init.d/mysql stop
        重启Mysql服务：sudo /etc/init.d/mysql restart
   　　　客户端连接：
        命令格式:mysql -h主机名 -u用户名 -p密码
                mysql -hlocalhost -uroot -p123456
        本地连接可以省略 -h 选项:mysql -uroot -p123456
                              mysql -uroot -p
        断开与服务器的连接：exit, quit, \q
基本的SQL命令
    SQL 命令的使用规则
      1.每条命令必须以 ; 结尾
      2.SQL命令不区分字母大小写
      3.使用 \c 终止命令的执行
    **库的管理**
      库的基本操作
        1.查看已有的库:show databases;
        2.创建库: create database 库名;
                 create database 库名 default charset=utf8; --->(指定字符集)
        3.查看创建库的语句:show create database 库名;
        4.查看当前所在库:select database();
        5.切换库:use 库名;
        6.查看库中已有的表:show tables;
        7.删除库:drop database 库名;
      库的命名规则
        1.可以使用数字，字母，下划线_，但是不能是纯数字
        2.库名区分区分字母大小写
        3.库名具有唯一性
        4.不能使用特殊字符和mysql关键字
    **表的管理**
      表的基本操作
        1.创建表:create table 表名(字段名1　数据类型, 字段名2 数据类型, ...);
                create table 表名(字段名1　数据类型, 字段名2 数据类型, ...)default charset=utf8;
                示例：
                create table td1(id int, name char(15))default charset=utf8;
        2.查看创建表的语句:show create table 表名;
        3.查看表结构:desc 表名;
        4.删除表:drop table 表名;
        5.查看已有的表:show tables;
        注意：1.所有的数据都是以文件的形式存储在数据库目录下
             2.数据库目录: /var/lib/mysql
    **表记录的管理**
      在表中插入记录
        1.语法格式:insert into 表名 values(值1),(值2),...;
        示例：
          insert into tb1(1, "小明"), (2, "小新");
      查看表记录
        1.select * from 表名;
        2.select 字段名1,字段名2,...from 表名;
    **如何更改默认字符集**
      方法:通过更改mysql 的配置文件实现
      步骤：1.获取root 权限(sudo -i)
           2.修改mysql　配置文件(vi /etc/mysql/mysql.conf.d/mysqld.cnf)-->(character_set_server = utf8)-->esc-->shift + :-->wq
           3.重启mysql 服务(sudo /etc/init.d/mysql restart)
               # vi命令的操作:vi XX-->按下a，进入编辑模式-->esc-->shift加上:-->wq
客户端把数据存储到数据库服务器上的过程：
    1.连接到数据库服务器:mysql -uroot -p
    2.选择库:use 库名;
    3.创建/修改 表
    4.断开与数据库的连接:exit, quit, \q

***提升权限***
  sudo -i --->输入密码:tarena --->cd /var/lib/mysql --->ls --->cd db1 --->ls -->cat *.frm

数据类型
  1.数值类型(有符号signed 和 无符号unsigned)
    整型：int       大整型　(4个字节)      取值范围：0~2**32-1
        　tinyint    微小整型(1个字节)     默认，有符号(signed默认)-128~127  ;  
                                       无符号(unsigned)0~255
        　smallint   小整型(2个字节)       取值范围：0~65535
        　bigint     极大整型(8个字节)     取值范围：0~2**64-1
    浮点型:float(4个字节，最多显示7个有效位)
           用法：字段名　float(m,n)      m-->总位数; n-->小数位位数
           示例：float(5,2)  取值范围：-999.99~999.99
           注意：1.浮点型插入整数时会自动补全小数位数
                2.小数位如果多余指定的位数，会对下一位四舍五入
          double(8个字节，最多显示15个有效位)
           用法：字段名　double(m,n)
          decimal(M+2个字节，最多显示28个有效位)
           用法：字段名 decimal(M,D)
          示例：
　　　　　　　　　　　　　　mysql> create table t7(
    　　　　　　　　　　    -> id int,
    　　　　　　　　　　    -> name char(20),
    　　　　　　　　　　    -> age tinyint unsiged,
    　　　　　　　　　　    -> salary decimal(18,2)
    　　　　　　　　　　    -> )default charset=utf8;
  2.字符类型
    char(定长)
        宽度取值范围：1~255  
        不给定宽度默认宽度为1
    varchar(变长)
    　　　　取值范围：1~65535
    注意：1.varchar 没有默认宽度，必须给定一个宽度
         2.char 和 varchar 使用时都给定宽度，但不能超过各自的范围
         3.char 和　varchar 的特点：
           char浪费存储空间，性能高
           varchar节省存储空间，性能低
         4.字符类型的宽度和数值类型的宽度的区别：
           数值类型的宽度为显示宽度，只用于select查询时使用，和占用存储空间大小无关，可用zerofill查看效果;  # 如：id int(3) zerofill,
           字符类型的宽度超过则无法存储
    示例：mysql> create table t9(
             -> id int,
             -> name varchar(15),
             -> class char(7),
             -> age tinyint unsigned
             -> )default charset=utf8;
**ctrl + s :屏蔽终端输入/输出**
**ctrl + q :恢复终端输入/输出**
  3.枚举类型
    定义：字段值只能在列举的范围内选择
    enum 单选(最多有65536不同的值)
         字段名　enum(值1,值2,...)
    set 多选(最多有64个不同的值)
         字段名　set(值1,值2,...)
    示例：
    mysql> create table t12(
        -> id int(3) zerofill,
        -> name varchar(15),
        -> class char(7),
        -> sex enum("男","女","保密"),
        -> likes set("打球","学习","人工智能")
        -> )default charset=utf8;
**select * from 表名\G;    --->表中的记录以行的形式显示．**
  4.日期时间类型
    year: 年 YYYY
    date: 日期 YYYYMMDD
    time: 时间 HHMMSS
    datetime: 日期时间　YYYYMMDDHHMMSS
    timestamp: 日期时间　YYYYMMDDHHMMSS
    注意：datetime不给值默认返回NULL
         timestamp不给值默认返回系统当前时间
    示例：
　　　　mysql> create table t13(
　　　　    -> id int(3) zerofill,
　　　　    -> name varchar(15),
　　　　    -> age tinyint unsigned,
　　　　    -> birth_year year,
　　　　    -> birthday date,
　　　　    -> class time,
　　　　    -> meeting datetime
　　　　    -> new_meeting timestamp
　　　　    -> )default charset=utf8;
**表字段的操作**
    语法：alter table 表名 执行动作;
    1.添加字段：alter table 表名 add 字段名 数据类型;
        添加到末尾：alter table 表名 add 字段名 数据类型;
        添加到最前边　alter table 表名 add 字段名 数据类型 first;
        添加到指定位置 alter table 表名 add 字段名 数据类型 after 字段名;
    2.删除字段：alter table 表名 drop 字段名;
    3.修改数据类型：alter table 表名 modify 字段名 新的数据类型;
    4.修改字段名：alter table 表名 change 旧字段名　新字段名　数据类型;
    5.修改表名：alter table 表名 rename 新表名;
