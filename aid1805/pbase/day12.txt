装饰器　decorators(专业提高篇)
函数装饰器
　　函数装饰器是指装饰的是一个函数，传入的是一个函数，返回的也是一个函数
　　函数装饰器的语法：
　　　　def 装饰器函数名(参数)：
　　　　　　　　语句块
　　　　　　　　return 函数对象
　　被装饰函数的语法：
　　　　＠装饰器函数名
　　　　def 函数名(形参列表)：
　　　　　　　　语句块

函数的文档字符串
　　函数内部，第一个没有赋值给任何变量的字符串为文档字符串
　　语法：def 函数名(形参列表)：
　　　　　　　'''函数的文档字符串'''
       函数语句块
　　示例：
　　　　　　def cba():
          '这是一块文档字符串...'
          pass
      >>> help(cba)
函数的＿doc＿属性
　　＿doc＿属性用于绑定该函数的文档字符串
　　示例：
      def fx(a, b):
          '''这是函数的文档字符串
          这是第二行...
          '''
      print(fx.__doc＿__)
函数的＿name＿属性
  ＿name＿属性用来绑定函数名的字符串
  示例：
      def fx():
          pass
      f1 = fx
      print(f1.__name__)　　# 'fx'
      f2 = lambda x: x + 1
      print(f2.__name__)  # '<lambda>'

函数定义语句(def 语句的语法)
　　[@装饰器名1]
　　[@装饰器名2]
　　...
  def 函数名([位置形参],[*[元组形参名]],[命名关键字形参],[**字典形参])：
      '''文档字符串'''
      语句块
　　注：[]里面的内容代表可省略

**面试题：**
L = [1, 2, 3]
def func(n, lst=[]):    # lst=[] 函数的缺省参数
    lst.append(n)
    print(lst)
func(4, L)   # 请问结果是什么？　　　　　[1, 2, 3, 4]
func(5, L)   # 请问结果是什么？     [1, 2, 3, 4, 5]
func(100)    # 请问打印结果是什么？  [100]
func(200)    # 请问打印结果是什么？  [100, 200]
# 默认参数(缺省参数)绑定在函数对象内部，且随函数的生命一直存在。
**解决办法：**
L = [1, 2, 3]
def f(n, lst=None):
    if lst is None:
        lst = []
    lst.append(n)
    print(lst)
f(4, L)   # 请问结果是什么？　　　　　[1, 2, 3, 4]
f(5, L)   # 请问结果是什么？     [1, 2, 3, 4, 5]
f(100)    # 请问打印结果是什么？  [100]
f(100)    # 请问打印结果是什么？  [200] 

**多人写一个程序时该怎么办？**
模块　module
　　　什么是模块？
　　　　　模块是一个包含有一系列数据，函数，类等组成的程序组;
　　　　　模块是一个文件，模块文件名通常以 .py 结尾。
　　　作用：
   　　让一些相关的数据，函数，类等有逻辑的组织在一起，使逻辑结构更加清晰;
   　　模块中的数据，函数和类等可提供给其它模块或程序使用。
   模块的分类：
   　　1.内置模块(builtins)，在解析器的内部可以直接使用;
   　　2.标准库模块，安装python时已安装且可直接使用;
   　　3.第三方模块(通常为开源)，需要自己安装;
   　　4.用户自己写的模块(可以作为其他人的第三方模块)。

模块的导入语句　import语句
　　　import 语句
　　　　　语法：import 模块名1[as 模块新名1][,　模块名2[as模块新名2]], ...
     示例：# 导入数学模块
     　　　　　  import math
          # 导入系统模块sys 和　os模块
            import sys, os
     作用：将某模块整体导入到当前模块
     用法：模块.属性名　　　　# math.cos(0)  # 1.0

dir(obj)  函数返回模块所有属性的字符串列表
help(obj) 可以查看模块相关的文档字符串

from import 语句
　　语法：from 模块名　import 模块属性名1[as 属性新名1][, 模块属性名2[as 属性新名2], ...]
  作用：将某模块内的一个或多个属性导入到当前模块的作用域
  示例：from math import pi
       from math import pow, sqrt
       from math import factorial as fac
       ...
from import *语句
  语法：from 模块名　import *
  作用：将某模块的所有属性都导入到当前模块
  示例：from math import *

dir 函数
　　dir([对象])　返回一个字符串列表
　　作用：如果没有参数调用，则返回当前作用域内的所有变量的列表
　　　　　　　如果给定一个对象作为参数，则返回这个对象的所有变量的列表
　　　　　　　1.对于一个模块，返回这个模块的全部属性
　　　　　　　2.对于一个类对象，返回类对象的所有变量，类递归基类对象的所有变量
　　　　　　　3.对于其它对象，返回所有的变量，类变量，基类变量

**数学模块　math**
  模块名　math
　　相关文档：
　　注:1.在linux 下为内建模块
　　　　　2.Mac OS 下为标准库模块
　　用法：import math 或者　from math import *
---------------------------------------------
　　　变量　　　　　　　　　描述
　　math.e  　 　 自然对数的底
　　math.pi  　 　圆周率
　　　函数 　　　　　　　     　  　　 描述
　　math.ceil(x)     　　　 对x　向上取整，如x=1.2,返回2
　　math.floor(x)   　　　  对x　向下取整，如x=1.2,返回1
　　math.sqrt(x)     　　　 返回x　的平方根
　　math.factorial(x)　　　 求x　的阶乘
　　math.log(x[,base])　　　返回以base 为底x　的对数，如果不给base,则以自然对数e为底
　　math.log10(x)　　　     求以10为底x 的对数
　　math.pow(x, y)　　　    返回x ** y(x的y次方)
　　math.fabs(x)　　　      返回浮点数x　的绝对值
　　角度和弧度degrees互换
　　math.degree(x)　　　    将弧度x　转换为角度
　　math.radians(x)　　    将角度x　转换为弧度
　　三角函数
　　math.sin(x)　　        返回x　的正弦(x 的弧度)
　　math.cos(x)　　        返回x　的余弦(x 的弧度)　
　　math.tan(x)　　        返回x　的正切(x 的弧度)　
　　math.asin(x)　　       返回x　的反正弦(返回值为弧度)
　　math.acos(x)　　       返回x　的反余弦(返回值为弧度)　
　　math.atan(x)　　       返回x　的反正切(返回值为弧度)

**时间模块　time**
  此模块提供了时间相关的函数，且一直可用
时间简介
　　公元纪年是从公元0000年1月1日0时开始的
　　计算机元年是从1970年1月1日0时开始的，此时时间为0，之后每过一秒时间+1
        [import time / time.time()]
　　UTC时间(Coordinated Universal Time)是从Greenwich时间开始计算的．UTC时间不会因时区问题而产生错误
　　DST阳光节约时间(Daylight Saving Time),又称夏令时，是经过日照时间修正后的时间
时间元组
　　时间元组是一个9个整型元素组成的，这9个元素自前置后依次为：
　　1.四位的年(如：1993)
　　2.月(1-12)
  3.日(1-31)
  4.时(0-23)
  5.分(0-59)
  6.秒(0-59)
  7.星期几(0-6, 周一是0)
  8.元旦开始日(1-366)
  9.夏令时修正时间(-1, 0 or 1)
  注：如果年份值小于100，则会自动转换为加上1900后的值
  用法：import time 或者　from time import xxx 或者　from time import *
----------------------------------------------
   变量　　　　　　　　　　　　     描述
　　time.altzone       夏令时时间与UTC时间差(秒为单位)
　　time.daylight      夏令时校正时间
　　time.timezone      本地区时间与UTC时间差(秒为单位)
　　time.tzname        时区名字的元组，第一个名字为未经夏令时修正的时区名．第一个名字为经夏令时修正的时区名
　　注：CST 为中国标准时间(China Standard Time UTC+8:00)
----------------------------------------------
　　　函数名　　　　　　　　　　　　　　    　      描述
　　time.time()              返回从计算机元年至当前时间的秒数的浮点数(UTC时间为准)
　　time.sleep(secs)         让程序按给定数的浮点数睡眠一段时间
　　time.gmtime([secs])      用给定秒数转换为用UTC表达的时间元组(缺省返回当前时间元组)
　　time.asctime([tuple])    将时间元组转换为日期时间字符串
　　time.mktime([tuple])     将本地日期时间元组转换为新纪元秒数时间(UTC时间为准)
　　time.localtime([secs])   将UTC秒数时间转换为日期元组(以本地时间为准)
  示例：
  import time
  t = time.gmtime()
  t[0:3]   # 元组的切片可以得到当前的年月日时间
