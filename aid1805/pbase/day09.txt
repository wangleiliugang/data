return 语句
　　语法：
　　　　　　return 表达式    # 表达式可以省略
　　作用：
　　　　　　用于函数中，结束当前函数的执行，返回到调用该函数的地方，同时返回一个对象的引用关系
　　说明：
　　　　　　1.return 语句后跟的表达式可以省略，省略后相当于return None
      2.如果函数没有return 语句，则函数执行完最后一条语句后返回None(相当于在最后加了一条
      return None语句)
      3.函数调用一定会返回一个对象的引用

python 函数的参数传递
　　传递方式
　　　　位置传参
　　　　　　序列传参
　　　　关键字传参
　　　　　　字典关键字传参
　　1.位置传参：
　　　　实际参数(实参)的对应关系与形式参数(形参)的对应关系是按照位置来依次对应的
　　　　示意：
　　　　　　　def myfun(a, b, c):
           pass
       myfun(1, 2, 3)
    说明：
    　　　实际参数和形式参数通过位置进行传递的匹配
    　　　实参个数必须与形参个数相同
　　2.序列传参：
   　序列传参是指在函数调用过程中，用* 将序列拆解后按位置传参的方式进行参数传递
   　示例：
   　　　　def myfun(a, b, c):
           pass
       s = [1, 2, 3]
       myfun(*s)
       s2 = "ABC"
       myfun(*s2)
　　3.关键字传参：
　　　　关键字传参是指传参时，按照形参的名称给形参赋值，实参和形参按名称进行匹配
　　　　示例：
       def myfun(a, b, c):
           pass
       myfun(b=22, c=33, a=11)
       等同于myfun(11, 22, 33)
       myfun(c=3, b=2, a=1)
    说明：
    　　　实参和形参可以不按位置匹配
　　4.字典关键字传参：
　　　　是指实参为字典，将字典用**　拆解后进行关键字传参
　　　　示例：
　　　　　　　def myfun(a, b, c):
           pass
       d = {'c':33, 'b':22, 'a':11}
       myfun(**d)
    说明：
    　　　字典的键名和形参名必须一致
    　　　字典键名必须为字符串
    　　　字典的键名要在形参中存在
函数的综合传参：
　　函数传参方式，在能确定形参能唯一匹配到相应实参的情况下可以任意组合
　　示例：
　　　　　　def myfun(a, b, c):
          pass
      myfun(100, *[200, 300])        # 正确
      myfun(*'AB', 300)              # 正确
      myfun(100, c=300, b=200)       # 正确
      myfun(1, **{'c':3, 'b':2})     # 正确
      myfun(**{'c':3, 'b':2}, a=1)   # 正确
      myfun(b=2, c=3, 1)             # 错误　无法确定1给谁？
　　说明：
　　　　　　传参时先位置传参，后关键字传参

**以下讲解函数的形参(如何接收实参)**
函数的缺省参数：
　　语法：
　　　　　　def 函数名(形参名1=默认实参1, 形参名2=默认实参2, ...):
  示例：
  　　　　def info(name, age=1, address='未填写'):
          print(name, "今年", age, '岁，家庭地址是：', adress)
      info('tarena', 15)
      info('小王', 20, '江苏苏州')
      info('小明')
  说明：
  　　　1.缺省参数必须自右至左依次存在，如果一个参数有缺省参数，则其右侧的所有参数都必须有缺省参数
  　　　　如：def  test(a, b=10, c)
  　　　　       pass        # 错误
  　　　2.缺省参数可以有0个或者多个，甚至全部都有缺省参数

函数的形参定义方式：
　　位置形参
　　星号元组形参
　　命名关键字形参
　　双星号字典形参

　　1.位置形参：
　　　　语法：def 函数名(形参名1，　形参名2，　...):
             语句块
  2.星号元组传参：
  　　语法：def 函数名(*元组形参名)
  　　　　　　　　　　　语句
  　　作用：收集多余的位置传参
  　　说明：元组形参名通常用：'args'
  3.命名关键字形参：
  　　语法：def 函数名(*, 命名关键字形参)： / 或者def 函数名(*args, 命名关键字形参)：
  　　　　　　　　　　　语句
    作用：所有的参数都必须用关键字传参或字典关键字传参传递
  4.双星号字典形参：
  　　语法：def 函数名(**字典形参名)：
  　　　　　　　　　　　语句
  　　作用：收集多余的关键字传参
    说明：通常字典形参名定为：'kwargs'

函数的参数说明：
　　缺省参数，位置形参，星号元组形参，命名关键字形参和双星号字典形参可以混合使用

函数参数自左至右的顺序为：
　　位置形参
　　星号元组形参
　　命名关键字形参
　　双星号字典形参

综合示例： 　　　
　　def f1(a, b, *args, c, **kwargs):
      pass
  f1(1, 2, 3, 4, d=6, c=5, e=7)

函数的不定长参数：
　　def fn(*args, **kwargs):
      pass
  # 可以接收任意的位置传参和关键字传参
