python 程序的组成
　　程序由模块组成
　　模块由语句，函数，类，数据等组成
　　语句包含表达式
　　表达式建立并处理数据对象

python 注释
　　以#开头，直至行尾

python 核心数据类型
　　数字（整型，浮点型，复数，布尔型）
　　字符串
　　列表等

整型数　int
  不带小数部分的数;包括自然数，０，负数．
整型数的字面值表示方式：
　　十进制表示
　　200，99999999999
　　二进制表示（以0b开头,后跟0~1）
  0b111,0b101,0b111111
  八进制表示（以0o开头,后跟0~7）
  0o177,0o11
  十六进制表示（以0x开头，后跟0~9,A~F,a~f）
  0x11,0xff,0x1234abcd
进制转换
　　十进制
　　二进制
　　八进制
　　十六进制

浮点型数　float
  带有小数部分的数字．
表示方式：
　　小数形式
　　3.14，3.1，3.，0.14，.14
　　科学计算法
　　小数 e/E(正负)指数　　如：6.18E-1,2.9975e8

复数　complex
  分为两部分，实部（real）;虚部（image）虚部以j/J结尾
  字面值　　1j,(2j),1+1J,3-4j,(-15+18j)

布尔类型数　bool
  用来表示真和假两种状态的类型
  　　True 表示真（条件满足或成立）　　　　　　值为1
  　　Flase 表示假（条件不满足或不成立）  值为0

空值　None 对象
　　None 是一个表示不存在的特殊对象
　　作用：1.用来占位　　　2.用来解除锁定

表达式和运算符（也叫操作符）
　　由一个数字或　数字和运算符组成
　　作用：让计算机做一些事情并返回结果　　　　　例如1+2
　　运算符：
　　　　算术运算符
　　　　　　　　+　　　 加法
        -　　　　减法
        *　　　　乘法
        /　　　　除法
        //　　　地板除
        %　　　　求余
        **   幂运算
　　　　除法得到的数是浮点型，不会丢弃小数部分
　　　　//地板除：结果去掉小数部分向下取整　　　　　　　　　　　　　　　　3.25//1.5  #得2.0
　　　　% 求余（也叫取模）　　　　　　　　　　　　　　　　　　　　　　　　　　　　　3.25%1.5   #得0.25
    ** 幂运算　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　

运算符的优先级
　　**
　　* / // %
  + -
  
括号分组子表达式
　　用（）可以将表达式分组，（）内的表达式先进行计算

混合类型自动升级
　　1　+　2.14　　　　　　　　　　#　返回浮点数　3.14

基本输出函数　print
  格式　print (要打印的数据)　　　　　　#各数据可以用逗号＇,＇分隔开

变量　variable
  用来绑定数据对象的标识符
　　变量名的命名方法：
　　　　　1.变量名必须为字母或者下划线开头，后跟字母,下划线,数字
　　　　　2.不能使用python的关键字做变量名
　　合法的变量名示例：
　　　　　a a1 bbb _aaa _Adg var a1b5c2
  不合法的变量名示例：
  　　　1a 123 $ABD +a -b #ab @ab　a*b a|b 
  python 关键字：
  　　　True False None is del if elif 等

赋值语句　statement
  语法：
  　　变量名　=　表达式　　/　　变量名１　= 变量名２　= 表达式  /  变量名１，变量名２，．．．　=　序列
  作用：
  　　用于创建变量并将变量绑定（或关联）在一个对象上
  说明：
  　　1.当变量不存在时，创建该变量同时绑定在这个对象上
  　　2.当变量存在时，改变此变量的绑定对象
  　　3.一个变量只能绑定一个对象
  　　4.两个变量可以同时绑定同一个对象
  示例：
  　　1.a = 10
      b = 15
      c = a + b
    2.x, y = 10, 20
      x * y = 200

python 中　关联/绑定/引用的含义
　　在python 中，变量没有类型
　　关联/绑定/引用都是指变量和一个对象的关联关系

在交互模式下查看变量的绑定关系：
　　>>> help('__main__')

python 中的自动化内存管理
　　a = 100
  b = 200
  a = a + b       #　结果a = 300

序列赋值的语法：
　　变量名１，变量名２，．．．　＝　对象１，对象２，．．．
　　变量名１，变量名２，．．．　＝（对象１，对象２，．．．）
　　变量名１，变量名２，．．．　＝［对象１，对象２，．．．］

is / is not 运算符
　　作用：判断两个变量是否绑定同一个对象，如果是同一个对象返回True,否则返回False
       is not 与 is 作用相反
  示例：
  　　a = 10000
    b = 10000
    a is b    #结果是 False

小整数对象池
　　cpython 中整数　-5 至　256
  永远存在于小整数池中，不会释放并可重复使用
  示例：
  　　a = 5                         a = 1 + 4
    b = 5                         b = 2 + 3
    a is b    #结果是　True         a is b          #结果是 True

id() 函数
  格式：id(对象)
  作用：返回一个对象在内存中的地址

del 语句
　　del 是 delete 的缩写）
　　作用：用于删除变量，同时删除与对象的关联关系．如果可能则释放对象
　　语法：del 变量名

　　python 的内存管理和引用计数
　　　每个对象都会记录有几个变量引用自身，当引用的数量为0时，则对象被销毁，此种自动化内存管理的方式叫引用计数．

复合赋值算术运算符
　　运算符　　　　　　　　　　　说明
　　y += x          等同于　y = y + x
　　y -= x          等同于　y = y - x
　　y *= x          等同于　y = y * x
　　y /= x          等同于　y = y / x
　　y //= x         等同于　y = y // x
　　y %= x          等同于　y = y +%x
　　y **= x         等同于　y = y +**x
　
比较运算符
　　<        小于
  <=       小于等于
  ＞        大于
  ＞=       大于等于
  ==       等于
  !=       不等于

  语法：左表达式　< 右表达式
  说明：比较运算符返回布尔类型的值
　　示例：10 < 20            # True
       10 < 20 <= 30      # True

数值对象的构造（创建）函数
　　float(obj)
    用字符串或数字转换为浮点数，如果不给出参数，则返回0
  int(x,base=10) 或　int(x=0)   
    用数字或字符串转换为整数，如果不给出参数，则返回0
　　complex(r=0.0, i=0.0)
    用数字创建一个复数（实部为r,　虚部为i）
  bool(x)
    用x创建一个布尔值（True/False）
　　　　bool(x)返回假值的情况：None       空值
　　　　　　　　　　　　　　　　　　　　　　　　False      布尔假值
　　　　　　　　　　　　　　　　　　　　　　　　0,0.0,0j
                        ''         空字符串
                        ()　　　　　　　　　空元组
                        []　　　　　　　　　空列表
                        {}　　　　　　　　　空字典
                        set()　　　　　　空集合
函数调用
　　函数名(传参列表)
　　说明：函数调用是表达式，一定会返回一个对象的引用关系

内建的数值型函数
　　abs(x)  　　　　　　　　　　　　　　　　　　　取x的绝对值
　　round(number[,　ndigits])   对数值进行四舍五入
　　　　ndigits 是小数向右取整的位数，负数表示向左取整
　　pow(x, y, z=None)　　　　　　　　　　相当于x ** y 或 x ** y % z

help()　函数　　可查看函数帮助文档
　　>>>help(函数名)
　
语句　（statement）
  由一些表达式等组成，通常一条语句可以独立执行来完成一部分事情并形成结果．
  一条语句建议写在一行内
  多条语句写在一行内需要用分号 ;　隔开
  
  示例：
  　　　　print("hello")
      x = 100 + 200
      print(x)
  　　　　print("hello"); x = 100 + 200; print(x)

换行
　　显示换行:　　　　折行符　\
  隐藏式换行：　　所有括号内换行   (),[],{}
　　
　　示例：
　　　　　　i = 1 + 2 + 3 \
          + 4 + 5
      print(i)       # 15
      i = (1+ 2 + 3
          + 4 + 5)   #15

基本输入输出
　　基本输入函数　input
    作用：从标准输入设备上读取一个字符串（末尾的换行符会被删除）
    格式：input('提示字符串')
    说明：返回输入的字符串（仅 python3）
         '提示字符串'　可以为空
         字符串不能和数字相加减

  基本输出函数　print
    作用：将一系列的值以字符串形式输出到标准输出设备上，默认为终端
    格式：print(value,...,sep='', end='\n')
    选项的关键字参数为：
    　　　　　　　　　　　　　　　sep  两个值之间的分隔符，默认为一个空格
    　　　　　　　　　　　　　　　end  输出完毕后在流末尾自动追加一个字符，默认为换行符　'\n'

if 语句
　　　　作用：让程序根据条件选择性的执行某条语句或者某些语句
　　　　说明：if 语句又叫条件语句，也叫分支语句
　　　　语法：
　　　　　　　　if   真值表达式１：
　　　　　　　　    语句块1
                #语句通常要以4个空格的缩进来表示包含关系，相同的缩进格式代表相同得到所属级别
　　　　　　　　elif 真值表达式2：　　　　　　#elif 子句可以有0个，1个或多个且只能放在if　语句的最后
　　　　　　　　　　　 语句块2
　　　　　　　　elif 真值表达式3：
　　　　　　　　　　　 语句块3
        ...
        else:　　　　　　　　　　　　　　　　　#else 子句可以有0个或者1个
            语句块4

if 语句的真值表达式
　　if 100:
      print("真值")
　　#等同于
　　if bool(100):
      print(＂真值＂)

if 语句嵌套
　　if　语句本身是由多条子句组成的一条复合语句
　　if 语句可以作为语句嵌套到另一个语句的内部

复习：
　　语句：1.赋值语句
　　　　　　　2.del　语句
　　　　　　　3.if 语句
　　　　　　　4.表达式语句

条件表达式
　　语法：表达式1　if 真值表达式　else 表达式２
　　作用：如果真值表达式的布尔环境值为True ,则执行表达式1并返回结果的引用;否则执行表达式2并返回结果的引用
  示例：03-06_if.py
  　　　　
pass 语句
　　作用：通常用来填充语法空白
　　　　　　　pass　语句又叫空语句
　　语法：pass

布尔运算
　　运算符：not  and  or
  布尔非操作：not
    语法：not x
    作用：对 x 进行布尔取值．　　如bool(x) 为True 则返回False ;否则返回True

  布尔与操作：and
    语法：x and y    #注意　x, y 代表表达式
    作用：优先返回假值对象．　　当bool(x) 的值为False时，返回x, 否则返回y
　　　　示例：
　　　　　　　　　True and True      #True
         True and False     #False
         False and True     #False
         False and False    #False
         0 and 0.0          #0 
         0.0 and 0          #0.0 
         100 and 0          #0 
         100 and 200        #200 
         
  布尔或操作：or
    语法：x or y
    作用：优先返回真值对象．　　当x 为True 是返回x, 否则返回y
    示例：  　
         True or False     #True
         100 or 200        #100
         0 or 100          #100
         0 or 0.0          #0.0


正负号运算符
　　+　正号　　　　-负号
　　语法：+ 表达式　　　　　　　　- 表达式
　　示例：　a = 5
        b = -a        #-5
        d = --a       #5












